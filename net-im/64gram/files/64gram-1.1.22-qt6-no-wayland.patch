diff '--color=auto' -rU3 64Gram-1.1.22-full.old/cmake/options.cmake 64Gram-1.1.22-full/cmake/options.cmake
--- 64Gram-1.1.22-full.old/cmake/options.cmake	2023-09-19 08:03:59.562056500 -0400
+++ 64Gram-1.1.22-full/cmake/options.cmake	2024-05-24 19:20:55.318831808 -0400
@@ -23,6 +23,13 @@
     )
 endif()
 
+if (DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION)
+    target_compile_definitions(common_options
+    INTERFACE
+       DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION
+    )
+endif()
+
 if (WIN32)
     include(cmake/options_win.cmake)
 elseif (APPLE)
diff '--color=auto' -rU3 64Gram-1.1.22-full.old/cmake/variables.cmake 64Gram-1.1.22-full/cmake/variables.cmake
--- 64Gram-1.1.22-full.old/cmake/variables.cmake	2024-04-09 10:42:37.923061400 -0400
+++ 64Gram-1.1.22-full/cmake/variables.cmake	2024-05-24 19:21:24.425818201 -0400
@@ -21,6 +21,7 @@
 
 option(DESKTOP_APP_LOTTIE_USE_CACHE "Use caching in lottie animations." ON)
 cmake_dependent_option(DESKTOP_APP_DISABLE_X11_INTEGRATION "Disable all code for X11 integration." OFF LINUX ON)
+cmake_dependent_option(DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION "Disable all code for Wayland integration." OFF LINUX ON)
 cmake_dependent_option(DESKTOP_APP_USE_ALLOCATION_TRACER "Use simple allocation tracer." OFF LINUX OFF)
 cmake_dependent_option(DESKTOP_APP_USE_PACKAGED_LAZY "Bundle recommended Qt plugins for self-contained packages." OFF LINUX OFF)
 option(DESKTOP_APP_USE_PACKAGED_FONTS "Use preinstalled fonts instead of bundled patched ones." OFF)
diff '--color=auto' -rU3 64Gram-1.1.22-full.old/Telegram/lib_base/base/platform/linux/base_linux_xdg_activation_token.cpp 64Gram-1.1.22-full/Telegram/lib_base/base/platform/linux/base_linux_xdg_activation_token.cpp
--- 64Gram-1.1.22-full.old/Telegram/lib_base/base/platform/linux/base_linux_xdg_activation_token.cpp	2023-12-02 13:57:09.565820700 -0500
+++ 64Gram-1.1.22-full/Telegram/lib_base/base/platform/linux/base_linux_xdg_activation_token.cpp	2024-05-24 19:18:52.067461555 -0400
@@ -15,7 +15,7 @@
 namespace base::Platform {
 
 void RunWithXdgActivationToken(Fn<void(QString)> callback) {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
+#if !defined DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION && QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
 	const auto window = QGuiApplication::focusWindow();
 	if (!window) {
 		callback({});
diff '--color=auto' -rU3 64Gram-1.1.22-full.old/Telegram/lib_ui/ui/platform/linux/ui_utility_linux.cpp 64Gram-1.1.22-full/Telegram/lib_ui/ui/platform/linux/ui_utility_linux.cpp
--- 64Gram-1.1.22-full.old/Telegram/lib_ui/ui/platform/linux/ui_utility_linux.cpp	2024-01-16 14:01:07.970033200 -0500
+++ 64Gram-1.1.22-full/Telegram/lib_ui/ui/platform/linux/ui_utility_linux.cpp	2024-05-24 19:20:22.231801644 -0400
@@ -413,7 +413,7 @@
 }
 #endif // !DESKTOP_APP_DISABLE_X11_INTEGRATION
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
+#if !defined DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION && QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
 void ShowWaylandWindowMenu(not_null<QWidget*> widget, const QPoint &point) {
 	static const auto wl_proxy_marshal_array = [] {
 		void (*result)(
@@ -533,7 +533,7 @@
 }
 
 bool WindowMarginsSupported() {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
+#if !defined DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION && QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
 	static const auto WaylandResult = [] {
 		using namespace QNativeInterface::Private;
 		QWindow window;
@@ -560,7 +560,7 @@
 }
 
 void SetWindowMargins(not_null<QWidget*> widget, const QMargins &margins) {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
+#if !defined DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION && QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
 	using namespace QNativeInterface::Private;
 	const auto window = not_null(widget->windowHandle());
 	const auto platformWindow = not_null(window->handle());
@@ -582,7 +582,7 @@
 }
 
 void UnsetWindowMargins(not_null<QWidget*> widget) {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
+#if !defined DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION && QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
 	using namespace QNativeInterface::Private;
 	if (const auto native = not_null(widget->windowHandle())
 			->nativeInterface<QWaylandWindow>()) {
@@ -600,7 +600,7 @@
 }
 
 void ShowWindowMenu(not_null<QWidget*> widget, const QPoint &point) {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
+#if !defined DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION && QT_VERSION >= QT_VERSION_CHECK(6, 5, 0)
 	if (::Platform::IsWayland()) {
 		ShowWaylandWindowMenu(widget, point);
 		return;
